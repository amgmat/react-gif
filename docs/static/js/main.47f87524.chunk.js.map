{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","action","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEfC,mBAAS,IAFM,mBAE5CC,EAF4C,KAEhCC,EAFgC,KAwBnD,OASA,cARA,CAQA,QAAMC,OAAO,GAAGC,SAvBK,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBAETP,EAAWQ,OAAOC,OAAO,IACxBX,GAAc,SAAAY,GAAI,OAAIV,GAAJ,mBAAmBU,OAGrCT,EAAc,MAetB,UACI,6BAAKD,IACL,uBACAW,KAAK,OACLC,MAAOZ,EACPa,SAjCsB,SAACT,GAEvBH,EAAcG,EAAEU,OAAOF,a,mCCVlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFD,SAASO,EAAT,GAA8B,IAAZnB,EAAW,EAAXA,SAAW,ECFhB,SAACA,GAAc,IAAD,EACZjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAuBtC,OAjBAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IASGqB,EDfwBK,CAAa1B,GAAhCa,EAN4B,EAMjCN,KAAaa,EANoB,EAMpBA,QAiCpB,OA/BA9B,QAAQC,IAAIsB,EAAQO,GAgChB,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEhB,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,YElDtB,IAAMgB,EAAe,WAAM,MAIM5C,mBAAS,CAAC,cAJhB,mBAIvB6C,EAJuB,KAIX9C,EAJW,KAY9B,OACI,qCACA,iDACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,uBAIA,6BACK8C,EAAWnB,KAAI,SAAAT,GAAQ,OACxB,cAACmB,EAAD,CAEAnB,SAAYA,GADPA,Y,MCrBjB6B,IAASC,OACP,cAAC,EAAD,IACEC,SAASC,eAAe,W","file":"static/js/main.47f87524.chunk.js","sourcesContent":["import React ,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AddCategory({ setCategories }) {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    // const [inputValue, setInputValue] = useState('Hola Mundo')\r\n    \r\n    const handleInputChange = (e)=>{\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log('Submit hecho');\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=> [inputValue, ...cats]);\r\n            // setCategories(cats=> [...cats, inputValue]);\r\n\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return ( \r\n    // <>\r\n    //     <h3>{inputValue}</h3>\r\n    //     <input \r\n    //     type=\"text\"\r\n    //     value={inputValue}\r\n    //     onChange = {handleInputChange}\r\n    //     />\r\n    // </>\r\n    <form action=\"\" onSubmit = { handleSubmit}>\r\n        <h3>{inputValue}</h3>\r\n        <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange = {handleInputChange}\r\n        />\r\n    </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Cv4gqggsi56QnHrdU26SYn34S4GTVrAa`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    // console.log(gifs);\r\n    // setImages(gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    // console.log({id, title, url});\r\n    return ( \r\n        <div className=\"card animate__animated animate__fadeIn\"> \r\n            {/* { img.title }  */}\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import React, {useState, useEffect} from 'react';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport default function GifGrid({category}) {\r\n\r\n    // const [count, setCount] = useState(0);\r\n\r\n    // const [images, setImages]= useState([])\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    // const state = useFetchGifs();\r\n    console.log(images, loading);\r\n    // console.log(state);\r\n\r\n    // useEffect(()=>{\r\n    //     getGifs(category).then(\r\n    //         setImages\r\n    //         // imgs=>setImages(imgs)\r\n    //     )\r\n    // },[category])\r\n\r\n    // const getGifs = async() => {\r\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Cv4gqggsi56QnHrdU26SYn34S4GTVrAa`;\r\n    //     const resp = await fetch(url);\r\n    //     const {data} = await resp.json();\r\n\r\n    //     const gifs = data.map( img=>{\r\n    //         return {\r\n    //             id: img.id,\r\n    //             title: img.title,\r\n    //             url: img.images?.downsized_medium.url\r\n    //         }\r\n    //     })\r\n\r\n    //     // console.log(data);\r\n    //     console.log(gifs);\r\n    //     setImages(gifs);\r\n    // }\r\n    \r\n    // getGifs();\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            {/* {loading ? 'Cargando...': 'Data cargada'} */}\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map(img=>(\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    {...img}/>\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// <ol>\r\n//     {images.map(({id, title}) => (\r\n    //         <li key={id}>{title}</li>\r\n    //     ))}\r\n    //     {/* {images.map(img => (\r\n        //         <li key={img.id}>{img.title}</li>\r\n    //     ))} */}\r\n    // </ol>\r\n\r\n    // {/* <h3>{count}</h3> */}\r\n    // {/* <button onClick={()=> setCount(count + 1)}></button> */}","// import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n\r\n        })\r\n    }, [category])\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1, 2, 3, 4, 5, 6, 7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Puch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     // categories.push('Hunter');\r\n    //     // setCategories(['HunterXHunter', ...categories]);\r\n    //     setCategories(cats => [...cats, 'Hunter']);\r\n    //     // console.log(categories);\r\n    // }\r\n    return ( \r\n        <>\r\n        <h2> GifExpert-App </h2> \r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n        {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n        <ol>\r\n            {categories.map(category =>\r\n            <GifGrid \r\n            key={category}\r\n            category = {category}/>)\r\n            }\r\n            {/* {\r\n                categories.map(category =>\r\n                     <li key={category}>{category}</li>\r\n                )\r\n            } */}\r\n            {/* {\r\n                categories.map(category =>{\r\n                    return <li key={category}>{category}</li>\r\n                })\r\n            } */}\r\n        </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render( \n  <GifExpertApp /> ,\n    document.getElementById('root')\n);"],"sourceRoot":""}